function init(self)

	self.score_node=gui.get_node("warning")
end

local function clearText(self,node)
	gui.set_text(self.score_node, "")
end

-- Delay in seconds (1 second)


function on_message(self, message_id, sender)
	if message_id == hash("update_warning") then
		-- set the score counter to new score
		-- local score_node = gui.get_node("warning")
		if self.score_node then
			-- Update the text of the "score" node
			gui.set_text(self.score_node, "No enough Strengthï¼Œnext turn ")
			local delay = 3

			-- Set the timer to clear the text after the delay
			timer.delay(delay, false, clearText)
		end
	end
	if message_id == hash("update_cultivate") then
		-- set the score counter to new score
		-- local score_node = gui.get_node("warning")
		if self.score_node then
			-- Update the text of the "score" node
			gui.set_text(self.score_node, "right click to cultivate ")
			local delay = 3

			-- Set the timer to clear the text after the delay
			timer.delay(delay, false, clearText)
		end
	end
	if message_id == hash("weak") then
		-- set the score counter to new score
		-- local score_node = gui.get_node("warning")
		if self.score_node then
			-- Update the text of the "score" node
			print(message.str)
			gui.set_text(self.score_node, "Strength not enough! ", message.str, " Needed!")
			-- gui.set_text(self.score_node, "")
			local delay = 3

			-- Set the timer to clear the text after the delay
			timer.delay(delay, false, clearText)
		end
	end
	if message_id == hash("finish") then
		-- set the score counter to new score
		-- local score_node = gui.get_node("warning")
		if self.score_node then
			-- Update the text of the "score" node
			gui.set_text(self.score_node, "CONGRADULATION!")
		end
	end

	if message_id == hash("adj") then
		gui.set_text(self.score_node, "you can only flip ADJCENT territory!")
	end
	if message_id == hash("cheat") then
		gui.set_text(self.score_node, "Don't cheat!")
		local delay = 3

		-- Set the timer to clear the text after the delay
		timer.delay(delay, false, clearText)
	end
end